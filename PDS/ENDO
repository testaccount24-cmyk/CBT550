         MACRO
&NAME    ENDO  &ELSE,&DOGROUP=    INTERCHANGEABLE WITH 'ENDELSE' EXCEPT
         COPY  $MGBLDEF           . FOR 'ENDELSE' CLAUSE
         LCLC  &X                  SET TO 'IF-FAILED' TAG
         AIF   (&$MDGLVL GT 0).OK02
         MNOTE 8,'''ENDO'' INVALID OUTSIDE DO-GROUP - MACRO GENERATION C
               TERMINATED'
         MEXIT
.OK02    ANOP
&X       SETC  '&$MCVERB(&$MDGLVL)'
         AIF   ('&X' EQ 'DO').OK03
         MNOTE 4,'''ENDO'' USED TO TERMINATE ''&X'' GROUP'
.OK03    ANOP  ,
&NAME    $MENDDO1 DOGROUP=&DOGROUP
         AIF   (&$MDGERR NE 0).QUIT GIVE UP IF ERROR
         AIF   ('&ELSE' NE '').NEXT10 NO 'ELSE' - END LAST LEVEL
         $MENDDO2                 LAST LEVEL FOR THIS PASS
         MEXIT
.NEXT10  AIF   ('&ELSE' EQ 'ELSEDO').NEXT20 GO IF LEGIT 'ELSEDO'
         MNOTE *,'ERROR IN PARM ''&ELSE'' - PARM IGNORED'
         $MENDDO2                 JUST LIKE NO '&ELSE'
         MEXIT
.NEXT20  ANOP
         AIF  ('&$MLTAG(&$MDGLVL)' EQ '').SKIP30
         MNOTE 8,'''ELSEDO'' INVALID FOR ''DO'' - IGNORED'
         $MENDDO2                 JUST LIKE NO '&ELSE'
         MEXIT
.SKIP30  ANOP
         AIF   ('&$MIFELS(&$MDGLVL)' NE 'S').SKIP40
         MNOTE 8,'''ELSEDO'' INVALID FOLLOWING ''ELSEDO'' - ''ENDO'' INC
               VOKED'
         $MENDDO2                 JUST LIKE NO 'ELSEDO'
         MEXIT
.SKIP40  J     $MDS&$MDGSEQ(&$MDGLVL) BRANCH AROUND ELSE-GROUP
&X       SETC  '$MDF&$MDGSEQ(&$MDGLVL)' 'IF-FAILED' TAG
&X       DC    0H'0'              TAG FOR 'IF' FAILURE
&$MIFELS(&$MDGLVL) SETC 'S'       SET FOR 'ENDELSE'
.QUIT    MEND

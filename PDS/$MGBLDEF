.*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
.* THIS COPY MEMBER CONTAINS THE GLOBAL SET SYMBOLS REQUIRED BY THE  *
.* MACROS IN THIS LIBRARY. AT IT'S FIRST INVOCATION WITHIN AN        *
.* ASSEMBLY, IT COPIES 6 MACRO DEFINITIONS THAT ARE CALLED FROM      *
.* WITHIN THE OTHER MACROS DEFINED IN THE LIBRARY.                   *
.*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         GBLA  &$MDGLVL,&$MDGERR,&$MRECUR,&$MCPYSW,&$MBLATH,&$MAXRC
         GBLC  &$MFNBR(31),&$MDGNAM(255),&$MDGSEQ(255),&$MNAME,&$MNC
         GBLC  &$MIFELS(255),&$MLTAG(255),&$MPNAM1(31),&$MFNAM1(31)
         GBLC  &$MCVERB(255),&$MC,&$MLOCTR
         AIF   (&$MCPYSW EQ 1).END999 THIS HOOPLA IS JUST TO PREVENT
&$MCPYSW SETA  (1)      THESE GUYS FROM APPEARING IN THE MEMBER LIST.
         AIF   ('&$MLOCTR' NE '').SKIP010 DON'T OVERLAY
&$MLOCTR SETC  '$$DATA$$'          DEFAULT VALUE FOR DATA LOCTR
.SKIP010 PUSH  PRINT  *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         PRINT OFF    *=* COPY INTERNAL MACROS INTO THIS ASSEMBLY *=*
         MACRO
&NAME    $MENDDO1 &DOGROUP=
         GBLA  &$MDGLVL,&$MDGERRR
         GBLC  &$MDGNAM(255)
         LCLA  &J
&$MDGERR SETA  0                   ASSUME NO ERROR
&J       SETA  &$MDGLVL
         AIF   (&J GT 0).OK02
   MNOTE 8,'NO ACTIVE CR-GROUP TO TERMINATE - MACRO GENERATION ABORTED'
&$MDGERR SETA  4                   WARN OTHERS
         MEXIT
.OK02    AIF   ('&DOGROUP' EQ '').SKIP15
         AIF   ('&DOGROUP' NE '*ALL*').TEST10 FALL THROUGH IF *ALL*
&J       SETA  1                   END ALL BUT OUTERMOST DO-GROUP
         AGO   .SKIP20             ENTER COMMON LOOP
.TEST10  AIF   ('&DOGROUP' EQ '&$MDGNAM(&J)').SKIP20
&J       SETA  &J-1
         AIF   (&J GE 1).TEST10
         MNOTE 8,'ATTEMPT TO END NON-EXISTANT DO-GROUP ''&DOGROUP'''
         MNOTE 0,'ALL ACTIVE DO-GROUPS TERMINATED'
&J       SETA  1
         AGO   .SKIP20
.SKIP15  AIF   ('&NAME' EQ '').ENDIT DO NOTHING IF ONLY 1 LEVEL
&NAME    DC    0H'0'               WELL, MAYBE A TAG...
         MEXIT
.SKIP20  AIF   ('&NAME' EQ '').LOOP30
&NAME    DC    0H'0'         *=*=* DEFINE END OF DO-GROUP *=*=*
.LOOP30  AIF   (&J GE &$MDGLVL).ENDIT END 1 BEFORE LAST LEVEL
         $MENDDO2                  END 1 LEVEL
         AIF   (&$MDGERR NE 0).ENDIT QUIT IF ERROR OCCURRED
         AIF   (&$MDGLVL LE 1).ENDIT
         AGO   .LOOP30
.ENDIT   MEND
         MACRO
         $MENDDO2
         GBLA  &$MDGLVL,&$MDGERR
         GBLC  &$MFNBR(31),&$MDGSEQ(255),&$MIFELS(255),&$MLTAG(255)
         GBLC  &$MCVERB(255)
         LCLC  &X
&$MDGERR SETA  0                   RESET TO 0
         AIF   (&$MDGLVL GT 0).AOK IF NOT GT 0 THEN NOTHING TO DO
         MNOTE 4,'ATTEMPT TO END NON-EXISTENT DO-GROUP(S)'
&$MDGERR SETA  4                   SHOW ERROR OCCURRED
         MEXIT
.AOK     AIF   ('&$MLTAG(&$MDGLVL)' EQ '').SKIP10
         J     &$MLTAG(&$MDGLVL)   RETURN TO 'DO'
&$MLTAG(&$MDGLVL) SETC ''          NULLIFY
.SKIP10  ANOP
&X       SETC  '$MD&$MIFELS(&$MDGLVL)&$MDGSEQ(&$MDGLVL)'
&X       DC    0H'0'         *=*=* DEFINE END OF DO-GROUP *=*=*
&$MCVERB(&$MDGLVL) SETC ''
         AIF   ('&$MFNBR(&$MDGLVL)' EQ '').SKIP30
&X       SETC  '$MDF&$MFNBR(&$MDGLVL)'
&$MFNBR(&$MDGLVL) SETC ''
&X       DC    0H'0'               DEFINE TAG FOR 'ELSEIF' STATEMENTS
.SKIP30  ANOP
&$MDGLVL SETA  &$MDGLVL-1
         $MLVLMSG &$MDGLVL,NESTING
         MEND
         MACRO
         $MGFNAME &DUMMY           CREATE A UNIQUE TAG FOR 'IF'
         GBLA  &$MRECUR
         GBLC  &$MFNAM1(31)
&$MFNAM1(&$MRECUR) SETC  '$MDF&SYSNDX' COMPARE-FAILED TAG
         MEND
         MACRO
         $MGFNBR &DUMMY            CREATE A UNIQUE TAG FOR 'ELSEIF'
         GBLA  &$MDGLVL
         GBLC  &$MFNBR(31)
&$MFNBR(&$MDGLVL) SETC '&SYSNDX'   CREATE UNIQUE SEQUENCE NUMBER
         MEND
         MACRO
         $MGPNAME &DUMMY           CREATE A UNIQUE TAG FOR 'IF'
         GBLA  &$MRECUR
         GBLC  &$MPNAM1(31)
&$MPNAM1(&$MRECUR) SETC  '$MDP&SYSNDX' COMPARE-SUCCEEDED TAG
         MEND
         MACRO
         $MLVLMSG &LVL,&TYPE       &TYPE MUST BE 'NESTING' OR
.*                                 . 'RECURSION'
         GBLA  &$MBLATH            USER CONTROLS MNOTES WITH THIS
         AIF   (&$MBLATH LT 10).MEND999 NO MNOTE IF < 10
         AIF   ('&TYPE' EQ 'NESTING').GEN010 ISSUE MNOTE IF EQUAL
         AIF   (&$MBLATH LT 12).MEND999 NO 'RECURSION' IF < 12
.GEN010  MNOTE '==> &LVL <== IS CURRENT &TYPE LEVEL'
.MEND999 MEND
         POP   PRINT  *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
.END999  ANOP
